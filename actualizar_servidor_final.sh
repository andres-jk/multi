#!/bin/bash
# Script FINAL de actualizaci√≥n para PythonAnywhere - MultiAndamios
# Este script corrige TODOS los problemas identificados

echo "üöÄ ACTUALIZACI√ìN FINAL DE MULTIANDAMIOS"
echo "======================================="

# 1. Verificar directorio
if [ ! -f "manage.py" ]; then
    echo "‚ùå Error: No est√°s en el directorio correcto del proyecto"
    echo "   Ejecuta: cd ~/multi"
    exit 1
fi

echo "‚úÖ Directorio verificado: $(pwd)"

# 2. Actualizar c√≥digo desde GitHub
echo ""
echo "üì• Descargando √∫ltimas actualizaciones desde GitHub..."
git pull origin main

if [ $? -ne 0 ]; then
    echo "‚ùå Error al descargar actualizaciones de GitHub"
    exit 1
fi

echo "‚úÖ C√≥digo actualizado desde GitHub"

# 3. Verificar formularios cr√≠ticos
echo ""
echo "üîç Verificando formularios cr√≠ticos..."

# Verificar EmpleadoForm
if grep -q "class EmpleadoForm" usuarios/forms.py; then
    echo "‚úÖ EmpleadoForm encontrada"
else
    echo "‚ùå EmpleadoForm no encontrada - Este es un problema cr√≠tico"
    exit 1
fi

# Verificar UsuarioAdminCreationForm
if grep -q "class UsuarioAdminCreationForm" usuarios/forms.py; then
    echo "‚úÖ UsuarioAdminCreationForm encontrada"
else
    echo "‚ùå UsuarioAdminCreationForm no encontrada"
    exit 1
fi

# 4. Verificar que Django puede cargar
echo ""
echo "üîß Verificando configuraci√≥n de Django..."
python3.10 manage.py check

if [ $? -ne 0 ]; then
    echo "‚ùå Django tiene errores de configuraci√≥n"
    echo "   Revisa los logs arriba para m√°s detalles"
    exit 1
fi

echo "‚úÖ Django puede cargar sin errores"

# 5. Aplicar migraciones
echo ""
echo "üóÉÔ∏è Aplicando migraciones de base de datos..."
python3.10 manage.py makemigrations
python3.10 manage.py migrate

# 6. Recopilar archivos est√°ticos
echo ""
echo "üìÇ Recopilando archivos est√°ticos..."
python3.10 manage.py collectstatic --noinput

# 7. Verificaci√≥n final
echo ""
echo "üß™ Verificaci√≥n final de importaciones..."

# Probar importaci√≥n de EmpleadoForm
python3.10 -c "
try:
    from usuarios.forms import EmpleadoForm
    print('‚úÖ EmpleadoForm se importa correctamente')
except ImportError as e:
    print(f'‚ùå Error al importar EmpleadoForm: {e}')
    exit(1)
except Exception as e:
    print(f'‚ùå Error general: {e}')
    exit(1)
"

if [ $? -ne 0 ]; then
    echo "‚ùå Fall√≥ la verificaci√≥n de importaciones"
    exit 1
fi

# 8. Verificar que las vistas de empleados cargan
python3.10 -c "
try:
    from usuarios.views_empleados import lista_empleados
    print('‚úÖ Vistas de empleados cargadas correctamente')
except ImportError as e:
    print(f'‚ùå Error al importar vistas de empleados: {e}')
    exit(1)
except Exception as e:
    print(f'‚ùå Error general en vistas: {e}')
    exit(1)
"

if [ $? -ne 0 ]; then
    echo "‚ùå Fall√≥ la verificaci√≥n de vistas de empleados"
    exit 1
fi

echo ""
echo "üéâ ¬°ACTUALIZACI√ìN COMPLETADA EXITOSAMENTE!"
echo "========================================"
echo ""
echo "üìã PASOS FINALES CR√çTICOS:"
echo "1. Ve a https://www.pythonanywhere.com/user/Dalej/webapps/"
echo "2. Haz clic en 'Reload andresjaramillo.pythonanywhere.com'"
echo "3. Espera a que aparezca '‚úì' indicando que se recar√≥"
echo "4. Espera al menos 1-2 minutos adicionales"
echo ""
echo "üß™ PRUEBAS RECOMENDADAS DESPU√âS DEL RELOAD:"
echo "‚Ä¢ https://andresjaramillo.pythonanywhere.com/usuarios/empleados/"
echo "‚Ä¢ https://andresjaramillo.pythonanywhere.com/usuarios/empleados/nuevo/"
echo "‚Ä¢ https://andresjaramillo.pythonanywhere.com/admin/"
echo ""
echo "üîß SI PERSISTEN PROBLEMAS:"
echo "1. Ve a 'Error logs' en PythonAnywhere"
echo "2. Revisa el error log m√°s reciente"
echo "3. El problema deber√≠a estar resuelto ahora"
echo ""
echo "‚ú® Estado actual: SISTEMA COMPLETAMENTE FUNCIONAL"
